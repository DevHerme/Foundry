{"ast":null,"code":"var _jsxFileName = \"C:\\\\Website\\\\Foundry\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Message from './Components/Message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Counter = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  const handleClick = () => {\n    setCount(count + 1); // Updates state, triggers re-render\n  };\n  console.log('Counter component re-rendered'); // Logs every re-render\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"IncrementTest asdfTesting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(Counter, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n_c = Counter;\nconst StaticMessage = () => {\n  console.log('StaticMessage component re-rendered'); // Logs every time this re-renders\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"This message doesn\\u2019t change!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n};\n_c2 = StaticMessage;\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React Re-rendering Example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Counter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StaticMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Message, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Counter\");\n$RefreshReg$(_c2, \"StaticMessage\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","Message","jsxDEV","_jsxDEV","Counter","_s","count","setCount","handleClick","console","log","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","StaticMessage","_c2","App","_c3","$RefreshReg$"],"sources":["C:/Website/Foundry/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Message from './Components/Message';\r\n\r\nconst Counter = () => {\r\n  const [count, setCount] = useState(0);\r\n\r\n  const handleClick = () => {\r\n    setCount(count + 1); // Updates state, triggers re-render\r\n  };\r\n\r\n  console.log('Counter component re-rendered'); // Logs every re-render\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handleClick}>IncrementTest asdfTesting</button>\r\n      <p>Count: {count}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst StaticMessage = () => {\r\n  console.log('StaticMessage component re-rendered'); // Logs every time this re-renders\r\n  return <p>This message doesnâ€™t change!</p>;\r\n};\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <h1>React Re-rendering Example</h1>\r\n      <Counter />\r\n      <StaticMessage />\r\n      <Message />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAErC,MAAMQ,WAAW,GAAGA,CAAA,KAAM;IACxBD,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;EACvB,CAAC;EAEDG,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC,CAAC,CAAC;;EAE9C,oBACEP,OAAA;IAAAQ,QAAA,gBACER,OAAA;MAAQS,OAAO,EAAEJ,WAAY;MAAAG,QAAA,EAAC;IAAyB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAChEb,OAAA;MAAAQ,QAAA,GAAG,SAAO,EAACL,KAAK;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEV,CAAC;AAACX,EAAA,CAfID,OAAO;AAAAa,EAAA,GAAPb,OAAO;AAiBb,MAAMc,aAAa,GAAGA,CAAA,KAAM;EAC1BT,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC,CAAC,CAAC;EACpD,oBAAOP,OAAA;IAAAQ,QAAA,EAAG;EAA4B;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;AAC5C,CAAC;AAACG,GAAA,GAHID,aAAa;AAKnB,MAAME,GAAG,GAAGA,CAAA,KAAM;EAChB,oBACEjB,OAAA;IAAAQ,QAAA,gBACER,OAAA;MAAAQ,QAAA,EAAI;IAA0B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnCb,OAAA,CAACC,OAAO;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACXb,OAAA,CAACe,aAAa;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjBb,OAAA,CAACF,OAAO;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV,CAAC;AAACK,GAAA,GATID,GAAG;AAWT,eAAeA,GAAG;AAAC,IAAAH,EAAA,EAAAE,GAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}